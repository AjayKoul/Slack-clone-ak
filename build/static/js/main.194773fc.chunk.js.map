{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","Firebase.js","components/Chat.js","components/Login.js","components/Header.js","Data/SidebarData.js","components/Sidebar.js","components/Themes.js","App.js","reportWebVitals.js","index.js"],"names":["msgAreaFocus","ChatInput","sendMessage","useState","setChosenEmoji","text","setText","bold","italic","strike","formatOptions","setFormatOptions","onEmojiClick","event","emojiObject","emoji","document","addEventListener","e","y","getElementById","x","localStorage","getItem","contains","target","style","display","a","querySelectorAll","i","length","color","highlight","temp","j","background","Container","InputContainer","id","type","placeholder","value","onClick","colorChange","onChange","fontWeight","fontStyle","textDecoration","handleChange","SendButton","preventDefault","send","fontSize","FormattingOptions","LeftFormatting","padding","cursor","borderRadius","RightFormatting","minWidth","maxWidth","pickerStyle","width","showHide","styled","div","button","props","theme","sendArea","msgText","ChatMessage","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","require","config","console","log","process","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firebase","initializeApp","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","LeftSection","ChannelName","ChannelInfo","DetailsSection","marginLeft","MessageContainer","item","index","userImage","ref","payload","Timestamp","now","photo","add","msg","Header","border","Login","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","setItem","JSON","stringify","setUser","catch","error","message","img","signOut","changeTheme","hideSideBar","Main","SearchContainer","UserContainer","DarkMode","UserImg","header","sidebarItems","icon","Sidebar","handle","history","useHistory","height","Workspace","NewMessage","MainChannels","MainChannelsItems","ChannelHeading","Name1","NewMessage1","promptName","prompt","addChannel","ChannelContainer","rooms","NewChannelContainer","push","sidebar","LightTheme","DarkTheme","App","setRooms","parse","setTheme","smallScreen","useMediaQuery","undefined","removeItem","path","SelectChannelMsg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.194773fc.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport Picker from 'emoji-picker-react';\r\nimport MediaQuery from 'react-responsive';\r\n\r\n//on click msg  area color of formatting options  rgb(115 113 113)\r\n// when idle rgb(197 194 194) \r\n// when clicked then black\r\n\r\nvar msgAreaFocus = false;\r\n\r\nfunction ChatInput({sendMessage}) {\r\n\r\n    const send = (e) => {\r\n        e.preventDefault();\r\n        if(text)\r\n        sendMessage(text);\r\n        setText(\"\");\r\n    }\r\n\r\n    const showHide = () =>{\r\n        const x = document.getElementById(\"emojiContainer\");\r\n        x.style.display=(x.style.display === \"none\")?\"block\":\"none\";\r\n    }\r\n\r\n    const [chosenEmoji,setChosenEmoji] = useState(null);\r\n    const [text,setText] = useState(\"\");\r\n    const [formatOptions,setFormatOptions] = useState({\r\n        bold: false,\r\n        italic: false,\r\n        strike: false\r\n    })\r\n\r\n    const onEmojiClick = (event,emojiObject) =>{\r\n        setChosenEmoji(emojiObject);\r\n        setText(text+emojiObject.emoji);\r\n    }\r\n\r\n    \r\n\r\n    const handleChange = (e) =>{\r\n          if(formatOptions.bold){ \r\n              e.style.fontWeight=\"bold\"\r\n              setText(e.value);\r\n            }\r\n            else{\r\n                 e.style.fontWeight=\"normal\";\r\n                 setText(e.value);\r\n            }\r\n            if(formatOptions.italic){ \r\n                e.style.fontStyle=\"italic\"\r\n                setText(e.value);\r\n              }\r\n              else{\r\n                   e.style.fontStyle=\"normal\";\r\n                   setText(e.value);\r\n              }\r\n              if(formatOptions.strike){ \r\n                e.style.textDecoration=\"line-through\"\r\n                setText(e.value);\r\n              }\r\n              else{\r\n                   e.style.textDecoration=\"none\";\r\n                   setText(e.value);\r\n              }\r\n    }\r\n\r\n\r\ndocument.addEventListener('mousedown', myFunc)\r\n    function myFunc(e) {\r\n        const y = document.getElementById('emojiContainer');\r\n        const x = document.getElementById('formatTextBold');\r\n        const z = document.getElementById('emojiIcon');\r\n     if(localStorage.getItem('user')){\r\n        if(!y.contains(e.target)) \r\n        y.style.display=\"none\"; \r\n        if(!x.contains(e.target)){\r\n            var a=document.querySelectorAll(\"#formatting-bold,#formatting-italic,#formatting-strike\");\r\n        for(var i=0;i<a.length;i++){\r\n            a[i].style.color= \"rgb(197 194 194)\";\r\n            msgAreaFocus = false;\r\n        }\r\n        }\r\n     }\r\n    }\r\n    \r\n    \r\n\r\n    const colorChange = () =>{\r\n        var x=document.querySelectorAll(\"#formatting-bold,#formatting-italic,#formatting-strike\");\r\n        for(var i=0;i<x.length;i++){\r\n            x[i].style.color= \"rgb(115 113 113)\";\r\n            msgAreaFocus = true;\r\n        }\r\n    }\r\n\r\n    const highlight =(e)=>{\r\n        var temp = document.querySelectorAll(\"#formatting-bold,#formatting-italic,#formatting-strike\");\r\n\r\n        for(var j=0;j<temp.length;j++){\r\n            if(temp[j].contains(e.target) && msgAreaFocus){\r\n            temp[j].style.background= temp[j].style.background === \"none\" ? \"#dbdcdc\" : \"none\";\r\n            if(j===0)\r\n                (formatOptions.bold)?setFormatOptions({...formatOptions,bold: false}) : setFormatOptions({...formatOptions,bold: true})\r\n            \r\n            else if(j===1)\r\n                (formatOptions.italic)?setFormatOptions({...formatOptions,italic: false}) : setFormatOptions({...formatOptions,italic: true})\r\n                \r\n            else if(j===2)\r\n                (formatOptions.strike)?setFormatOptions({...formatOptions,strike: false}) : setFormatOptions({...formatOptions,strike: true})\r\n            \r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        \r\n        <Container>\r\n            <InputContainer id=\"formatTextBold\">\r\n                <form>\r\n                    <input type=\"text\" placeholder=\"Message here...\" value={text} onClick={()=>colorChange()} onChange={(e)=>handleChange(e.target)}/>\r\n                    <SendButton type=\"submit\" onClick={(e)=>send(e)}>\r\n                     <SendIcon fontSize=\"small\" style={{color: \"D9D9D9\"}}/>\r\n                    </SendButton>\r\n                </form>\r\n                <hr/>\r\n                <FormattingOptions>\r\n                    <LeftFormatting>\r\n                        \r\n                        <span><FormatBoldIcon id=\"formatting-bold\" onClick={(e)=> highlight(e)} fontSize=\"small\" style={{color: \"rgb(197 194 194)\", padding: \"3px\", cursor: \"pointer\", background: \"none\", borderRadius: \"3px\"}}/></span>\r\n                        <span><FormatItalicIcon id=\"formatting-italic\" onClick={(e)=> highlight(e)} fontSize=\"small\" style={{color: \"rgb(197 194 194)\", padding: \"3px\", cursor: \"pointer\", background: \"none\", borderRadius: \"3px\"}}/></span>\r\n                        <span><StrikethroughSIcon id=\"formatting-strike\" onClick={(e)=> highlight(e)} fontSize=\"small\" style={{color: \"rgb(197 194 194)\", padding: \"3px\", cursor: \"pointer\", background: \"none\", borderRadius: \"3px\"}}/></span>\r\n                    </LeftFormatting>\r\n                    <RightFormatting>\r\n                        <div id=\"emojiContainer\" style={{display: \"none\"}}>\r\n                            <MediaQuery minWidth={550}>\r\n                            <span id=\"bigScreen\"><Picker onEmojiClick={onEmojiClick} /></span>\r\n                            </MediaQuery>\r\n                            <MediaQuery maxWidth={550}>\r\n                            <span id=\"smallScreen\"><Picker onEmojiClick={onEmojiClick} pickerStyle={{ width: '100%' }}/></span>\r\n                            </MediaQuery>\r\n                        </div>\r\n                        <SentimentSatisfiedOutlinedIcon id=\"emojiIcon\" onClick={()=>showHide()} style={{cursor: \"pointer\"}}/>\r\n                    </RightFormatting>\r\n            </FormattingOptions>\r\n            </InputContainer>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\n\r\nconst Container = styled.div`\r\n     padding-left: 20px;\r\n     padding-right: 20px;\r\n     padding-bottom: 24px;\r\n`\r\nconst SendButton=styled.button`\r\n    background: #007a5a;\r\n    border-radius: 2px;\r\n    width: 32px;\r\n    height: 32px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    cursor: pointer;\r\n    border: none;\r\n    :hover{\r\n        background: #148567;\r\n    }\r\n`\r\nconst InputContainer=styled.div`\r\n    border: 1px solid #8D8D8E;\r\n    border-radius: 7px;\r\n    form {\r\n        display: flex;\r\n        height: 42px;\r\n        align-items: center;\r\n        padding-left: 10px;\r\n        border-radius: 7px;\r\n        background: ${props=>props.theme.sendArea};\r\n        input{\r\n            flex: 1;\r\n            border: none;\r\n            font-size: 13px;\r\n            color: ${props=>props.theme.msgText};\r\n            background: ${props=>props.theme.sendArea};\r\n        }\r\n        input:focus{\r\n            outline: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst FormattingOptions = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    \r\n`\r\nconst LeftFormatting = styled.div`\r\n    padding-left: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n\r\n    span{\r\n        padding: 2px;\r\n    }\r\n\r\n`\r\n\r\nconst RightFormatting = styled.div`\r\n    padding-right: 8px;\r\n\r\n    span#bigScreen{\r\n        position: absolute;\r\n        bottom: 16.5vh;\r\n        right: 10px;\r\n    }\r\n    span#smallScreen{\r\n        position: absolute;\r\n        bottom: 16.5vh;\r\n        left: 285px;\r\n    }\r\n`","import react from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ChatMessage = ({ text, name, image, timestamp})=>{\r\n\r\n    return(\r\n        <Container>\r\n            <UserAvatar>\r\n                <img src={image}/>\r\n            </UserAvatar>\r\n            <MessageContent>\r\n                <Name>\r\n                    {name}\r\n                    <span>{new Date(timestamp.toDate()).toUTCString()}</span>\r\n                </Name>\r\n                <Text >\r\n                    {text}\r\n                </Text>\r\n            </MessageContent>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatMessage;\r\n\r\nconst Container = styled.div`\r\n    padding: 8px 20px;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst UserAvatar = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    margin-right: 8px;\r\n    img{\r\n        width: 100%;\r\n        \r\n    }\r\n`\r\n\r\nconst MessageContent = styled.div`\r\n    display: flex;  \r\n    flex-direction: column;\r\n`\r\n\r\nconst Name = styled.div`\r\n    font-weight: 800;\r\n    font-size: 15px;\r\n    line-height: 1.4;\r\n    span{\r\n        font-weight: 400;\r\n        color: rgb(97,96,97);\r\n        margin-left: 8px;\r\n        font-size: 13px;\r\n    }\r\n`\r\n\r\nconst Text = styled.div``","import firebase from 'firebase'\r\nrequire('dotenv').config()\r\nconsole.log(process.env.REACT_APP_API)\r\n\r\nconst firebaseConfig = {\r\n    apiKey: `${process.env.REACT_APP_API}`,\r\n    authDomain: \"slack-clone-9ede3.firebaseapp.com\",\r\n    projectId: \"slack-clone-9ede3\",\r\n    storageBucket: \"slack-clone-9ede3.appspot.com\",\r\n    messagingSenderId: \"41482246042\",\r\n    appId: \"1:41482246042:web:b0f80263a6a9a34f8f8c23\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const database = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  // provider is basically who is providing you authourization facility is it facebook or google etc.\r\n\r\n  \r\n  export {auth,provider};\r\n  export default database;","import react,{ useState , useEffect,useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport ChatInput from './ChatInput';\r\nimport ChatMessage from './ChatMessage';\r\nimport database from '../Firebase';\r\nimport {useParams} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport ScrollBar from 'react-scrollbars-custom';\r\n\r\nconst Chat=({user})=>{\r\n\r\n    let {channelId} = useParams();\r\n\r\n    const [channel,setChannel] = useState();\r\n    const [messages,setMessages] = useState([]);\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const sendMessage = (text) =>{\r\n        if(channelId){\r\n            let payload = {\r\n                text: text,\r\n                timestamp: firebase.firestore.Timestamp.now(),\r\n                user: user.name,\r\n                userImage: user.photo\r\n            }\r\n            database.collection('rooms')\r\n            .doc(channelId)\r\n            .collection('messages')\r\n            .add(payload)\r\n        }\r\n    }\r\n\r\n    const getMessages = () => {\r\n        database.collection('rooms')\r\n        .doc(channelId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot)=>{\r\n            let messages = snapshot.docs.map((doc)=>doc.data());\r\n            setMessages(messages);\r\n            \r\n    })\r\n}\r\n\r\n    const getChannel = () => {\r\n        database.collection('rooms')\r\n        .doc(channelId)\r\n        .onSnapshot((snapshot)=>{\r\n                setChannel(snapshot.data());\r\n        })\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n      }\r\n\r\n      useEffect(()=>{\r\n        scrollToBottom();\r\n      },[messages])\r\n\r\n    useEffect(()=>{\r\n        getChannel()\r\n        getMessages()\r\n        },[channelId])\r\n\r\n\r\nreturn(\r\n    <Container>\r\n        <Header>\r\n            <LeftSection>\r\n                <ChannelName>\r\n                    # {channel && channel.name}\r\n                </ChannelName>\r\n                <ChannelInfo>\r\n                    Company-wide announcements and work-based matters\r\n                </ChannelInfo>\r\n            </LeftSection>\r\n            <DetailsSection>\r\n                    <div>Details</div>\r\n                    <InfoOutlinedIcon style={{marginLeft: '10px'}}/>\r\n            </DetailsSection>\r\n        </Header>\r\n        <ScrollBar >\r\n        <MessageContainer>\r\n            {  \r\n                 messages.length > 0 &&\r\n                messages.map( (item,index) => {\r\n                    return <ChatMessage text={item.text} name={item.user} image={item.userImage} timestamp={item.timestamp} />\r\n                })\r\n            }\r\n            \r\n        </MessageContainer>\r\n        <div ref={messagesEndRef} />\r\n        </ScrollBar>\r\n        <ChatInput sendMessage={sendMessage}/>\r\n    </Container>\r\n)\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\n    width: -webkit-fill-available;\r\n    display: grid;\r\n    grid-template-rows: 11.8vh auto min-content;\r\n    background: ${item=>item.theme.msg};\r\n    color: ${item=>item.theme.msgText};\r\n`\r\n\r\nconst Header = styled.div`\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${props=>props.theme.border};\r\n    \r\n`\r\n\r\nconst MessageContainer = styled.div`\r\n`\r\n\r\n\r\nconst LeftSection = styled.div``\r\n\r\nconst DetailsSection = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst ChannelName = styled.div`\r\n    font-weight: 700;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n    font-weight:400;\r\n    color: #606060;\r\n    font-size: 13px;\r\n`","import react from 'react'\r\nimport styled from 'styled-components'\r\nimport {auth,provider} from '../Firebase'\r\n\r\nconst Login=(props)=>{\r\n\r\n    const signIn = () =>{\r\n        auth.signInWithPopup(provider)\r\n        .then((result)=>{\r\n            const newUser = {\r\n                name: result.user.displayName,\r\n                photo: result.user.photoURL\r\n            }\r\n            localStorage.setItem('user',JSON.stringify(newUser));\r\n            props.setUser(newUser);\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.message);\r\n        })\r\n    }\r\n    \r\nreturn (\r\n        <Container>\r\n            <Content>\r\n                <SlackImg src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"/>\r\n                <h1>Sign in Slack</h1>\r\n                <SignInButton onClick={()=>signIn()}>\r\n                    Sign in with Google\r\n                </SignInButton>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n    background: ${item=>item.theme.msg}; /*e2d9d9*/\r\n    color: black;\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;  /*chikd component got horizontally aligned in center*/\r\n    align-items: center;\r\n`\r\nconst Content = styled.div`\r\n    padding: 100px;\r\n    border-radius: 5px;\r\n    background: white;\r\n    box-shadow: 0px 0px 9px 1px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst SlackImg = styled.img`\r\n    height: 100px;\r\n`\r\nconst SignInButton = styled.button`\r\n    margin-top: 50px;\r\n    background: #0a8d48;\r\n    color: white;\r\n    border: none;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n`","import react from 'react'\r\nimport styled from 'styled-components'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded';\r\nimport NightsStaySharpIcon from '@material-ui/icons/NightsStaySharp';\r\nimport MediaQuery from 'react-responsive';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Header = ({user,signOut,theme,changeTheme,hideSideBar}) =>{\r\n    localStorage.setItem('theme',JSON.stringify(theme));\r\n\r\n    return(\r\n        <Container>\r\n            <MediaQuery maxWidth={580}>\r\n                <span id=\"menu\"><MenuIcon onClick={hideSideBar}/></span>\r\n            </MediaQuery>\r\n            <Main>\r\n            <MediaQuery minWidth={580}>\r\n                <AccessTimeIcon/>\r\n            </MediaQuery>\r\n            <MediaQuery minWidth={580}>\r\n                <span id=\"searchBigScreen\"><SearchContainer>\r\n                    <input type=\"text\" placeholder=\"Search...\"/>\r\n                </SearchContainer></span>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={580}>\r\n            <span id=\"searchSmallScreen\"><SearchContainer>\r\n                    <input type=\"text\" placeholder=\"Search...\"/>\r\n                </SearchContainer></span>\r\n            </MediaQuery>\r\n            <MediaQuery minWidth={580}>\r\n                <HelpOutlineIcon/>\r\n            </MediaQuery>\r\n            </Main>           \r\n            <UserContainer>\r\n                <DarkMode>\r\n                    <span onClick={changeTheme}>\r\n                        {theme==='light'?<NightsStaySharpIcon/>:<WbSunnyRoundedIcon/>}\r\n                    </span>\r\n                </DarkMode>\r\n                <Name>\r\n                    {user.name}\r\n                </Name>\r\n                <UserImg onClick={signOut}>\r\n                    <img src= {user.photo? user.photo:\"https://i.imgur.com/6VBx3io.png\"}/>\r\n                </UserImg>\r\n            </UserContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${item=>item.theme.header};\r\n    color: white;\r\n    position: relative;\r\n    border-bottom: 1px solid ${props=>props.theme.border};\r\n\r\n    span#menu{\r\n        position: absolute;\r\n        left: 8px;\r\n        text-align: center;\r\n    }\r\n`\r\nconst Main = styled.div`\r\n    display:flex;\r\n    span#searchSmallScreen{\r\n        position: absolute;\r\n        left: 35px;\r\n        bottom: 5px;\r\n        \r\n    }\r\n`\r\nconst UserContainer = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n    position: absolute;\r\n    right: 0;\r\n`\r\nconst SearchContainer = styled.div `\r\n    width: 30vw;\r\n    border-radius: 6px;\r\n    margin-right: 20px;\r\n    margin-left: 8px;\r\n    float: left;    \r\n    \r\n    input{\r\n        width: 100%;\r\n        border-radius: 6px;\r\n        background-color: transparent;\r\n        border: 1px solid black;\r\n        padding-left: 8px;\r\n        color: white;\r\n        padding-top: 4px;\r\n        padding-bottom: 4px;\r\n    }\r\n    input:focus{\r\n        outline: none;\r\n    }\r\n`\r\nconst Name = styled.div `\r\n    padding-right: 16px;\r\n`\r\nconst UserImg = styled.div `\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid white;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    img{\r\n        width: 100%;\r\n    }\r\n`\r\nconst DarkMode = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 12px;\r\n    cursor: pointer;\r\n    \r\n\r\n`","import MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\n\r\nexport const sidebarItems = [\r\n    {\r\n        icon: <MessageIcon/>,\r\n        text: \"Thread\"\r\n    },\r\n    {\r\n        icon: <InboxIcon/>,\r\n        text: \"All DMs\"\r\n    },\r\n    {\r\n        icon: <DraftsIcon/>,\r\n        text: \"Mentions & Reactions\"\r\n    },\r\n    {\r\n        icon: <BookmarkBorderIcon/>,\r\n        text: \"Save Items\"\r\n    },\r\n    {\r\n        icon: <GroupIcon/>,\r\n        text: \"Peoples & Groups\"\r\n    },\r\n    {\r\n        icon: <AppsIcon/>,\r\n        text: \"Thread\"\r\n    }\r\n\r\n]\r\n","import React,{ useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {sidebarItems} from '../Data/SidebarData';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport database from '../Firebase';\r\nimport {history, useHistory} from 'react-router-dom';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    useEffect(()=>{\r\n        props.handle()\r\n    },[])\r\n\r\n    const history = useHistory();\r\n\r\n    const goToChannel = (id) =>{\r\n        history.push(`/room/${id}`);\r\n    }\r\n    \r\n    const addChannel=()=>{\r\n        const promptName= prompt(\"Enter channel name\");\r\n        if(promptName)\r\n        database.collection('rooms').add({name: promptName})\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{height: \"-webkit-fill-available\"}}>\r\n            <Container>\r\n                <Workspace>\r\n                    <Name>\r\n                        CleverProgrammer\r\n                    </Name>\r\n                    <NewMessage>\r\n                        <AddCircleOutlineIcon/>\r\n                    </NewMessage>\r\n                </Workspace>\r\n                <MainChannels>\r\n                    {\r\n                        sidebarItems.map(item=>(\r\n                            <MainChannelsItems>\r\n                                {item.icon}\r\n                                {item.text}\r\n                            </MainChannelsItems>\r\n                        ))\r\n                    }\r\n\r\n                </MainChannels>\r\n                <ChannelHeading>\r\n                    <Name1>\r\n                        Channel\r\n                    </Name1>\r\n                    <NewMessage1>\r\n                        <AddIcon onClick={()=>addChannel()}/>\r\n                    </NewMessage1>\r\n                </ChannelHeading>\r\n                <ChannelContainer onClick={props.hideSideBar}>\r\n                    {\r\n                        props.rooms.map(item=>(    \r\n                        <NewChannelContainer onClick={()=> goToChannel(item.id)}>\r\n                            # {item.name}\r\n                        </NewChannelContainer>\r\n                            )\r\n                        )\r\n                    }\r\n                </ChannelContainer>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst Container = styled.div `\r\n    background: ${item=>item.theme.sidebar};\r\n    height: 100%;\r\n    width: 260px;\r\n    border-right: 1px solid ${props=>props.theme.border};\r\n`\r\nconst Workspace = styled.div `\r\n    color: white;\r\n    height: 11.7vh;\r\n    display:flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${props=>props.theme.border};\r\n`\r\nconst Name = styled.div `\r\n    \r\n    \r\n`\r\nconst NewMessage = styled.div `\r\n    width: 36px;\r\n    height: 36px;\r\n    background: white;\r\n    color: #3F0E40;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n\r\n`\r\nconst MainChannels = styled.div `\r\n    padding-top: 20px;\r\n    \r\n`\r\nconst MainChannelsItems = styled.div `\r\n    color: white;\r\n    display: grid;\r\n    grid-template-columns: 15% auto;\r\n    height: 28px;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor:pointer;\r\n    \r\n    :hover{\r\n        background: #532753;\r\n    }\r\n`\r\nconst ChannelContainer = styled.div `\r\n    color: white;\r\n    \r\n\r\n    \r\n`\r\nconst NewChannelContainer = styled.div `\r\n    color: white;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover{\r\n        background: #350D36;\r\n    }\r\n    \r\n`\r\nconst Name1 = styled.div `\r\n    padding-left: 19px;\r\n    \r\n`\r\nconst NewMessage1 = styled.div `\r\n    margin-right: 20px;\r\n    cursor:pointer;\r\n    \r\n`\r\nconst ChannelHeading = styled.div `\r\n    color: white;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-content: center;\r\n    margin-top: 8px;\r\n    \r\n`","\r\nexport const LightTheme = {\r\n    header: '#350d36',\r\n    sidebar: '#3F0E40',\r\n    msg: '#f8f8f8',\r\n    msgText: 'black',\r\n    border: '#532753',\r\n    sendArea: 'white'\r\n}\r\n\r\nexport const DarkTheme = {\r\n    header: '#2f2f2f',\r\n    sidebar: '#2f2f2f',\r\n    msg: '#2f2f2f',\r\n    msgText: '#e4e4e4',\r\n    border: '#484848',\r\n    sendArea: '#333'\r\n}","import React,{useState,useEffect} from 'react';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Chat from './components/Chat';\nimport Login from './components/Login';\nimport './App.css';\nimport styled, {ThemeProvider} from 'styled-components';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport database from './Firebase';\nimport {LightTheme, DarkTheme} from './components/Themes';\nimport {auth, provider} from './Firebase';\nimport MediaQuery,{useMediaQuery} from 'react-responsive';\nfunction App() {\n\nconst getChannels =()=>{\n  database.collection('rooms').onSnapshot((snapshot)=>{\n    setRooms(snapshot.docs.map((doc)=>{\n      return {id: doc.id, name: doc.data().name}\n    }))\n  })\n}\n\nconst [rooms,setRooms] = useState([]);\nconst [theme,setTheme] = useState(JSON.parse(localStorage.getItem(\"theme\")));\nconst [user,setUser] = useState(JSON.parse(localStorage.getItem('user')));\n\nconst changeTheme = () =>{\n  theme === 'light' ? setTheme('dark'): setTheme('light');\n}\nconst signOut = () =>{\n  auth.signOut().then(()=>{\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('theme');\n  })\n}\n\nconst handle = () =>{\n  if(!smallScreen)\n  document.getElementById('smallScreen').style.display=\"block\";\n  else{\n  document.getElementById('smallScreen').style.display=\"none\";\n  }\n}\nconst smallScreen = useMediaQuery(\n  {maxWidth: 580},undefined, handle)\n\n  \n\nconst hideSideBar = () => {\n  const x=document.getElementById('smallScreen');\n  if(smallScreen){\n  if(x.style.display===\"none\"){\n    x.style.display=\"block\";\n  }\n  else{\n    x.style.display=\"none\";\n  }\n}\nif(!smallScreen)\n  x.style.display=\"block\";\n}\n\nuseEffect(()=>{\n  getChannels();\n},[])\n\n  return (\n      <div>\n        <ThemeProvider theme={theme==='dark'?DarkTheme:LightTheme}>\n          <Router>\n            {\n              !user?\n              <Login setUser={setUser}/>\n              :\n              <Container>\n                <Header user={user} signOut={signOut} theme={theme} changeTheme={changeTheme} hideSideBar={hideSideBar} />\n                <Main>\n                    \n                      <span id=\"smallScreen\"><Sidebar rooms={rooms} hideSideBar={hideSideBar} handle={handle}/> </span>\n                     \n                  <Switch>\n                    <Route path=\"/room/:channelId\">\n                      <Chat user={user}/>\n                    </Route>\n                    <Route path=\"/\">\n                      <SelectChannelMsg>\n                      <h1>\n                      Bring your team together in channels\n                      </h1>\n                      <h3>A channel is the place for everything related to a project, topic or team. Everyone in a channel sees the same <span>messages and stays on the same page.</span></h3>\n                      </SelectChannelMsg>\n                    </Route>\n                  </Switch>\n                </Main>\n              </Container>\n            }\n          </Router>\n        </ThemeProvider>\n      </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width:100vw;\n  height:100vh;\n  display:grid;\n  grid-template-rows: 38px minmax(0, 1fr);\n  overflow: auto;\n`\nconst Main = styled.div`\n  display: flex;\n`\n\nconst SelectChannelMsg = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  width: -webkit-fill-available;\n  background: ${props=>props.theme.msg};\n  color: ${props=>props.theme.msgText};\n  h3{\n    font-weight: 500;\n    width: 70vw;\n  }\n  text-align: center;\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}